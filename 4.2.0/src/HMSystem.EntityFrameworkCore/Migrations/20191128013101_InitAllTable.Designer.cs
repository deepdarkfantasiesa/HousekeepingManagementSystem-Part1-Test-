// <auto-generated />
using System;
using HMSystem.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HMSystem.Migrations
{
    [DbContext(typeof(HMSystemDbContext))]
    [Migration("20191128013101_InitAllTable")]
    partial class InitAllTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HMSystem.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasMaxLength(256);

                    b.Property<string>("IDCard")
                        .HasMaxLength(256);

                    b.Property<string>("Region")
                        .HasMaxLength(256);

                    b.HasKey("CustomerID");

                    b.ToTable("CustomerInfo");
                });

            modelBuilder.Entity("HMSystem.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Assess");

                    b.Property<int>("CustomerID");

                    b.Property<decimal>("Price");

                    b.Property<int>("ServicePersonalBaseID");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ServicePersonalBaseID");

                    b.ToTable("OrderInfo");
                });

            modelBuilder.Entity("HMSystem.ServicePersonalBase", b =>
                {
                    b.Property<int>("ServicePersonalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("IDCard")
                        .HasMaxLength(256);

                    b.Property<int>("NumberOfRoles");

                    b.Property<string>("SelfIntroduction")
                        .HasMaxLength(256);

                    b.Property<int>("ServicePersonalGender");

                    b.Property<string>("ServicePersonalName")
                        .HasMaxLength(256);

                    b.Property<string>("ServiceRegion")
                        .HasMaxLength(256);

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(256);

                    b.Property<int>("Type");

                    b.HasKey("ServicePersonalID");

                    b.ToTable("ServicePersonalBaseInfo");
                });

            modelBuilder.Entity("HMSystem.ServicePersonalCertificates", b =>
                {
                    b.Property<int>("CertificatesID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificateOfEmployment")
                        .HasMaxLength(256);

                    b.Property<string>("ProfessionalCertificate")
                        .HasMaxLength(256);

                    b.Property<int>("ServicePersonalID");

                    b.HasKey("CertificatesID");

                    b.HasIndex("ServicePersonalID");

                    b.ToTable("ServicePersonalCertificatesInfo");
                });

            modelBuilder.Entity("HMSystem.WorkRecord", b =>
                {
                    b.Property<int>("WorkRecordID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID");

                    b.Property<int>("ServicePersonalID");

                    b.Property<DateTime>("StartTime");

                    b.Property<DateTime>("StopTime");

                    b.HasKey("WorkRecordID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ServicePersonalID");

                    b.ToTable("WorkRecordInfo");
                });

            modelBuilder.Entity("HMSystem.Order", b =>
                {
                    b.HasOne("HMSystem.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HMSystem.ServicePersonalBase", "ServicePersonalBase")
                        .WithMany()
                        .HasForeignKey("ServicePersonalBaseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HMSystem.ServicePersonalCertificates", b =>
                {
                    b.HasOne("HMSystem.ServicePersonalBase", "ServicePersonalBase")
                        .WithMany()
                        .HasForeignKey("ServicePersonalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HMSystem.WorkRecord", b =>
                {
                    b.HasOne("HMSystem.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HMSystem.ServicePersonalBase", "ServicePersonalBase")
                        .WithMany()
                        .HasForeignKey("ServicePersonalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
